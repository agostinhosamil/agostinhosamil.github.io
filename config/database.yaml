# Alternates for database connection
# it determinates if there're more
# than a possible database to make
# connection with the current application
# It's a boolean value saying yes (true) or
# no (false) acording to the application purpose
# in order avoiding several memory use inside of
# small and simple ils application, and so, providing
# a more flexibility about how to find the application datas
alternates: true

defaults:
  adapter: mysql
  charset: utf8
  host: <?= ENV::Get('MYSQL_HOST') ?>
  port: <?= ENV::Get('MYSQL_PORT') ?>
  user: <?= ENV::Get('MYSQL_USER') ?>
  pass: <?= ENV::Get('MYSQL_PASS') ?>

  # Timeout per synchronization for
  # each database used inside the current
  #timeout_per_sync: 24h

development:
  db: agostinho_samil_development_db

  - alternate: switch to another database
    db: agostinho_samil_development_db0
  - alternate: switch to another database
    db: agostinho_samil_development_db1

test:
  # application. This option is uesless is
  # 'alternates' is declared as false
  # This is a number in miliseconds by default
  # wish may be set with another unity putting
  # it at the end of the number as: '10s' or 0.6h
  adapter: sqlite3
  db: agostinho_samil_test_db
  timeout_per_sync: 10m

production:
  user: <?= ENV::Get('MYSQL_USER') ?>
  pass: <?= ENV::Get('MYSQL_PASS') ?>
  db:   <?= ENV::Get('MYSQL_DBNAME') ?>
